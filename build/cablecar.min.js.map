{"version":3,"sources":["webpack:///cablecar.min.js","webpack:///webpack/bootstrap 42a7c5774a64183a6d2b","webpack:///./index.js","webpack:///./src/middleware.js","webpack:///./src/cableCar.js"],"names":["module","exports","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_middleware","_middleware2","_cableCar","_cableCar2","car","connected","middleware","store","next","action","type","unsubscribe","changeChannel","channel","options","ActionCable__flag","send","optimistic","getState","connect","_classCallCheck","instance","Constructor","TypeError","_typeof","Symbol","iterator","constructor","prototype","CableCar","arguments","length","undefined","this","_initialiseProps","ActionCable","Error","initialize","_this","params","assign","subscription","createConsumer","subscriptions","create","initialized","disconnected","received","rejected","dispatch","msg","formatAction","data","perform"],"mappings":"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","file":"cablecar.min.js","sourcesContent":["module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _middleware = __webpack_require__(1);\n\t\n\tvar _middleware2 = _interopRequireDefault(_middleware);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\texports.default = _middleware2.default;\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _cableCar = __webpack_require__(2);\n\t\n\tvar _cableCar2 = _interopRequireDefault(_cableCar);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar car = void 0;\n\tvar connected = false;\n\t\n\tvar middleware = function middleware(store) {\n\t  return function (next) {\n\t    return function (action) {\n\t      switch (action.type) {\n\t        case 'CABLECAR_INITIALIZED':\n\t          car = action.car;\n\t          break;\n\t        case 'CABLECAR_CONNECTED':\n\t          connected = true;\n\t          break;\n\t        case 'CABLECAR_DISCONNECTED':\n\t          connected = false;\n\t          break;\n\t        case 'CABLECAR_DISCONNECT':\n\t          car.unsubscribe();\n\t          car = null;\n\t          break;\n\t        case 'CABLECAR_CHANGE_CHANNEL':\n\t          car.changeChannel(action.channel, action.options || {});\n\t          break;\n\t        default:\n\t          break;\n\t      }\n\t\n\t      if (connected && !action.ActionCable__flag) {\n\t        car.send(action);\n\t      }\n\t\n\t      return action.optimistic || action.ActionCable__flag ? next(action) : store.getState();\n\t    };\n\t  };\n\t};\n\t\n\tmiddleware.connect = function (store, channel, options) {\n\t  return new _cableCar2.default(store, channel, options);\n\t};\n\t\n\texports.default = middleware;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/* global ActionCable */\n\t\n\tvar CableCar = function CableCar(store, channel) {\n\t  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\t\n\t  _classCallCheck(this, CableCar);\n\t\n\t  _initialiseProps.call(this);\n\t\n\t  if (typeof ActionCable === 'undefined') {\n\t    throw new Error('CableCar tried to connect to ActionCable but ActionCable is not defined');\n\t  }\n\t\n\t  this.store = store;\n\t  this.initialize(channel, options);\n\t}\n\t\n\t// Redux dispatch function\n\t\n\t\n\t// ActionCable callback functions\n\t\n\t\n\t// ActionCable subscription functions (exposed globally)\n\t;\n\t\n\tvar _initialiseProps = function _initialiseProps() {\n\t  var _this = this;\n\t\n\t  this.initialize = function (channel, options) {\n\t    _this.channel = channel;\n\t    _this.options = options;\n\t\n\t    var params = Object.assign({ channel: channel }, options);\n\t\n\t    _this.subscription = ActionCable.createConsumer().subscriptions.create(params, {\n\t      initialized: _this.initialized,\n\t      connected: _this.connected,\n\t      disconnected: _this.disconnected,\n\t      received: _this.received,\n\t      rejected: _this.rejected\n\t    });\n\t  };\n\t\n\t  this.changeChannel = function (channel) {\n\t    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t    _this.unsubscribe();\n\t    _this.initialize(channel, options);\n\t  };\n\t\n\t  this.dispatch = function (msg) {\n\t    var action = (typeof msg === 'undefined' ? 'undefined' : _typeof(msg)) === 'object' ? msg : _this.formatAction(msg);\n\t    action = Object.assign(action, { ActionCable__flag: true });\n\t    _this.store.dispatch(action);\n\t  };\n\t\n\t  this.formatAction = function (msg) {\n\t    return {\n\t      type: msg,\n\t      car: _this,\n\t      channel: _this.channel,\n\t      options: _this.options\n\t    };\n\t  };\n\t\n\t  this.initialized = function () {\n\t    return _this.dispatch('CABLECAR_INITIALIZED');\n\t  };\n\t\n\t  this.connected = function () {\n\t    return _this.dispatch('CABLECAR_CONNECTED');\n\t  };\n\t\n\t  this.disconnected = function () {\n\t    return _this.dispatch('CABLECAR_DISCONNECTED');\n\t  };\n\t\n\t  this.received = function (msg) {\n\t    return _this.dispatch(msg);\n\t  };\n\t\n\t  this.rejected = function (data) {\n\t    throw new Error('Attempt to connect Redux store and ActionCable channel via CableCar failed. ' + data);\n\t  };\n\t\n\t  this.perform = function (action, data) {\n\t    return _this.subscription.perform(action, data);\n\t  };\n\t\n\t  this.send = function (action) {\n\t    return _this.subscription.send(action);\n\t  };\n\t\n\t  this.unsubscribe = function () {\n\t    _this.subscription.unsubscribe();\n\t    _this.disconnected();\n\t  };\n\t};\n\t\n\texports.default = CableCar;\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// cablecar.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 42a7c5774a64183a6d2b","import middleware from './src/middleware';\n\nexport default middleware;\n\n\n\n// WEBPACK FOOTER //\n// ./index.js","import CableCar from './cableCar';\n\nlet car;\nlet connected = false;\n\nconst middleware = store => next => (action) => {\n  switch (action.type) {\n    case 'CABLECAR_INITIALIZED':\n      car = action.car;\n      break;\n    case 'CABLECAR_CONNECTED':\n      connected = true;\n      break;\n    case 'CABLECAR_DISCONNECTED':\n      connected = false;\n      break;\n    case 'CABLECAR_DISCONNECT':\n      car.unsubscribe();\n      car = null;\n      break;\n    case 'CABLECAR_CHANGE_CHANNEL':\n      car.changeChannel(action.channel, action.options || {});\n      break;\n    default:\n      break;\n  }\n\n  if (connected && !action.ActionCable__flag) {\n    car.send(action);\n  }\n\n  return (action.optimistic || action.ActionCable__flag ? next(action) : store.getState());\n};\n\nmiddleware.connect = (store, channel, options) => new CableCar(store, channel, options);\n\n\nexport default middleware;\n\n\n\n// WEBPACK FOOTER //\n// ./src/middleware.js","/* global ActionCable */\n\nclass CableCar {\n\n  constructor(store, channel, options = {}) {\n    if (typeof ActionCable === 'undefined') {\n      throw new Error('CableCar tried to connect to ActionCable but ActionCable is not defined');\n    }\n\n    this.store = store;\n    this.initialize(channel, options);\n  }\n\n  initialize = (channel, options) => {\n    this.channel = channel;\n    this.options = options;\n\n    const params = Object.assign({ channel }, options);\n\n    this.subscription = ActionCable.createConsumer().subscriptions.create(params, {\n      initialized: this.initialized,\n      connected: this.connected,\n      disconnected: this.disconnected,\n      received: this.received,\n      rejected: this.rejected,\n    });\n  }\n\n  changeChannel = (channel, options = {}) => {\n    this.unsubscribe();\n    this.initialize(channel, options);\n  }\n\n  // Redux dispatch function\n  dispatch = (msg) => {\n    let action = typeof msg === 'object' ? msg : this.formatAction(msg);\n    action = Object.assign(action, { ActionCable__flag: true });\n    this.store.dispatch(action);\n  }\n\n  formatAction = msg => ({\n    type: msg,\n    car: this,\n    channel: this.channel,\n    options: this.options,\n  })\n\n  // ActionCable callback functions\n  initialized = () => this.dispatch('CABLECAR_INITIALIZED')\n\n  connected = () => this.dispatch('CABLECAR_CONNECTED')\n\n  disconnected = () => this.dispatch('CABLECAR_DISCONNECTED')\n\n  received = msg => this.dispatch(msg)\n\n  rejected = (data) => {\n    throw new Error(`Attempt to connect Redux store and ActionCable channel via CableCar failed. ${data}`);\n  }\n\n  // ActionCable subscription functions (exposed globally)\n  perform = (action, data) => this.subscription.perform(action, data)\n\n  send = action => this.subscription.send(action)\n\n  unsubscribe = () => {\n    this.subscription.unsubscribe();\n    this.disconnected();\n  }\n}\n\n\nexport default CableCar;\n\n\n\n// WEBPACK FOOTER //\n// ./src/cableCar.js"],"sourceRoot":""}