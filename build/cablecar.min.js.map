{"version":3,"sources":["webpack:///cablecar.min.js","webpack:///webpack/bootstrap 62f6af06838f010da994","webpack:///./index.js","webpack:///./src/middleware.js","webpack:///./src/cableCar.js"],"names":["module","exports","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_middleware","_middleware2","_cableCar","_cableCar2","car","middleware","store","next","action","type","unsubscribe","disconnected","changeChannel","channel","options","ActionCable__flag","send","optimistic","getState","connect","_classCallCheck","instance","Constructor","TypeError","CableCar","arguments","length","undefined","this","_initialiseProps","ActionCable","Error","params","assign","subscription","initialize","_this","createConsumer","subscriptions","create","initialized","connected","received","rejected","dispatch","msg","data","perform"],"mappings":"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","file":"cablecar.min.js","sourcesContent":["module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _middleware = __webpack_require__(1);\n\t\n\tvar _middleware2 = _interopRequireDefault(_middleware);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\texports.default = _middleware2.default;\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _cableCar = __webpack_require__(2);\n\t\n\tvar _cableCar2 = _interopRequireDefault(_cableCar);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar car = void 0;\n\t\n\tvar middleware = function middleware(store) {\n\t  return function (next) {\n\t    return function (action) {\n\t      switch (action.type) {\n\t        case 'CABLE_CAR_INITIALIZED':\n\t          car = action.car;\n\t          break;\n\t        // case 'CABLE_CAR_CONNECTED':\n\t        //   break;\n\t        case 'CABLE_CAR_DISCONNECTED':\n\t          car = null;\n\t          break;\n\t        case 'CABLE_CAR_DISCONNECT':\n\t          car.unsubscribe();\n\t          car.disconnected();\n\t          break;\n\t        case 'CABLE_CAR_CHANGE_CHANNEL':\n\t          car.changeChannel(action.channel, action.options || {});\n\t          break;\n\t        default:\n\t          break;\n\t      }\n\t\n\t      if (car && !action.ActionCable__flag) {\n\t        car.send(action);\n\t      }\n\t\n\t      return action.optimistic || action.ActionCable__flag ? next(action) : store.getState();\n\t    };\n\t  };\n\t};\n\t\n\tmiddleware.connect = function (store, channel, options) {\n\t  return new _cableCar2.default(store, channel, options);\n\t};\n\t\n\texports.default = middleware;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/* global ActionCable */\n\t\n\tvar CableCar = function CableCar(store, channel) {\n\t  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\t\n\t  _classCallCheck(this, CableCar);\n\t\n\t  _initialiseProps.call(this);\n\t\n\t  if (typeof ActionCable === 'undefined') {\n\t    throw new Error('CableCar tried to connect to ActionCable but ActionCable is not defined');\n\t  }\n\t\n\t  this.params = Object.assign({ channel: channel }, options);\n\t  this.store = store;\n\t  this.subscription = this.initialize(this.params);\n\t}\n\t\n\t// Redux dispatch function\n\t\n\t\n\t// ActionCable callback functions\n\t\n\t\n\t// ActionCable subscription functions (exposed globally)\n\t;\n\t\n\tvar _initialiseProps = function _initialiseProps() {\n\t  var _this = this;\n\t\n\t  this.initialize = function (params) {\n\t    return ActionCable.createConsumer().subscriptions.create(params, {\n\t      initialized: _this.initialized,\n\t      connected: _this.connected,\n\t      disconnected: _this.disconnected,\n\t      received: _this.received,\n\t      rejected: _this.rejected\n\t    });\n\t  };\n\t\n\t  this.changeChannel = function (channel) {\n\t    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t    _this.subscription.unsubscribe();\n\t    _this.params = Object.assign({ channel: channel }, options);\n\t    _this.subscription = _this.initialize(_this.params);\n\t  };\n\t\n\t  this.dispatch = function (msg) {\n\t    return _this.store.dispatch(Object.assign(msg, { ActionCable__flag: true }));\n\t  };\n\t\n\t  this.initialized = function () {\n\t    return _this.dispatch({ type: 'CABLE_CAR_INITIALIZED', car: _this });\n\t  };\n\t\n\t  this.connected = function () {\n\t    return _this.dispatch({ type: 'CABLE_CAR_CONNECTED' });\n\t  };\n\t\n\t  this.disconnected = function () {\n\t    return _this.dispatch({ type: 'CABLE_CAR_DISCONNECTED' });\n\t  };\n\t\n\t  this.received = function (msg) {\n\t    return _this.dispatch(msg);\n\t  };\n\t\n\t  this.rejected = function (data) {\n\t    throw new Error('Attempt to connect Redux store and ActionCable channel via CableCar failed. ' + data);\n\t  };\n\t\n\t  this.perform = function (action, data) {\n\t    return _this.subscription.perform(action, data);\n\t  };\n\t\n\t  this.send = function (action) {\n\t    return _this.subscription.send(action);\n\t  };\n\t\n\t  this.unsubscribe = function () {\n\t    return _this.subscription.unsubscribe();\n\t  };\n\t};\n\t\n\texports.default = CableCar;\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// cablecar.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 62f6af06838f010da994","import middleware from './src/middleware';\n\nexport default middleware;\n\n\n\n// WEBPACK FOOTER //\n// ./index.js","import CableCar from './cableCar';\n\nlet car;\n\nconst middleware = store => next => (action) => {\n  switch (action.type) {\n    case 'CABLE_CAR_INITIALIZED':\n      car = action.car;\n      break;\n    // case 'CABLE_CAR_CONNECTED':\n    //   break;\n    case 'CABLE_CAR_DISCONNECTED':\n      car = null;\n      break;\n    case 'CABLE_CAR_DISCONNECT':\n      car.unsubscribe();\n      car.disconnected();\n      break;\n    case 'CABLE_CAR_CHANGE_CHANNEL':\n      car.changeChannel(action.channel, action.options || {});\n      break;\n    default:\n      break;\n  }\n\n  if (car && !action.ActionCable__flag) {\n    car.send(action);\n  }\n\n  return (action.optimistic || action.ActionCable__flag ? next(action) : store.getState());\n};\n\nmiddleware.connect = (store, channel, options) => new CableCar(store, channel, options);\n\n\nexport default middleware;\n\n\n\n// WEBPACK FOOTER //\n// ./src/middleware.js","/* global ActionCable */\n\nclass CableCar {\n\n  constructor(store, channel, options = {}) {\n    if (typeof ActionCable === 'undefined') {\n      throw new Error('CableCar tried to connect to ActionCable but ActionCable is not defined');\n    }\n\n    this.params = Object.assign({ channel }, options);\n    this.store = store;\n    this.subscription = this.initialize(this.params);\n  }\n\n  initialize = params =>\n\n    ActionCable.createConsumer().subscriptions.create(params, {\n      initialized: this.initialized,\n      connected: this.connected,\n      disconnected: this.disconnected,\n      received: this.received,\n      rejected: this.rejected,\n    })\n\n  changeChannel = (channel, options = {}) => {\n    this.subscription.unsubscribe();\n    this.params = Object.assign({ channel }, options);\n    this.subscription = this.initialize(this.params);\n  }\n\n  // Redux dispatch function\n  dispatch = msg => this.store.dispatch(Object.assign(msg, { ActionCable__flag: true }))\n\n  // ActionCable callback functions\n  initialized = () => this.dispatch({ type: 'CABLE_CAR_INITIALIZED', car: this })\n\n  connected = () => this.dispatch({ type: 'CABLE_CAR_CONNECTED' })\n\n  disconnected = () => this.dispatch({ type: 'CABLE_CAR_DISCONNECTED' })\n\n  received = msg => this.dispatch(msg)\n\n  rejected = (data) => {\n    throw new Error(`Attempt to connect Redux store and ActionCable channel via CableCar failed. ${data}`);\n  }\n\n  // ActionCable subscription functions (exposed globally)\n  perform = (action, data) => this.subscription.perform(action, data)\n\n  send = action => this.subscription.send(action)\n\n  unsubscribe = () => this.subscription.unsubscribe()\n\n}\n\n\nexport default CableCar;\n\n\n\n// WEBPACK FOOTER //\n// ./src/cableCar.js"],"sourceRoot":""}