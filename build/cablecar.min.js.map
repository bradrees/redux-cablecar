{"version":3,"sources":["webpack:///cablecar.min.js","webpack:///webpack/bootstrap a8df2ba8c9626fbeb937","webpack:///./index.js","webpack:///./src/middleware.js","webpack:///./src/cableCar.js"],"names":["module","exports","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_middleware","_middleware2","_cableCar","_cableCar2","middleware","channel","s","window","console","log","car","store","next","action","type","unsubscribe","__ActionCable","send","optimistic","getState","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","CableCar","_this","this","dispatch","msg","assign","initialized","connected","disconnected","received","rejected","data","perform","subscription","ActionCable","initialize","createConsumer","subscriptions","create"],"mappings":"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","file":"cablecar.min.js","sourcesContent":["module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _middleware = __webpack_require__(1);\n\t\n\tvar _middleware2 = _interopRequireDefault(_middleware);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\texports.default = _middleware2.default;\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _cableCar = __webpack_require__(2);\n\t\n\tvar _cableCar2 = _interopRequireDefault(_cableCar);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar middleware = function middleware(channel, s) {\n\t  window.console.log(s);\n\t  var car = new _cableCar2.default(channel);\n\t\n\t  return function (store) {\n\t    return function (next) {\n\t      return function (action) {\n\t\n\t        if (!car.store) {\n\t          car.store = store;\n\t        }\n\t\n\t        if (action.type === 'CABLE_CAR_INITIALIZED') {\n\t          car.store = store;\n\t        } else if (action.type === 'DISCONNECT_CABLE_CAR') {\n\t          car.unsubscribe();\n\t        } else if (!action.__ActionCable) {\n\t          car.send(action);\n\t        }\n\t\n\t        return action.optimistic || action.__ActionCable ? next(action) : store.getState();\n\t      };\n\t    };\n\t  };\n\t};\n\t\n\texports.default = middleware;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar CableCar = function () {\n\t  function CableCar(channel) {\n\t    var _this = this;\n\t\n\t    _classCallCheck(this, CableCar);\n\t\n\t    this.dispatch = function (msg) {\n\t      return _this.store ? _this.store.dispatch(Object.assign(msg, { __ActionCable: true })) : false;\n\t    };\n\t\n\t    this.initialized = function () {\n\t      return _this.dispatch({ type: 'CABLE_CAR_INITIALIZED' });\n\t    };\n\t\n\t    this.connected = function () {\n\t      return _this.dispatch({ type: 'CABLE_CAR_CONNECTED' });\n\t    };\n\t\n\t    this.disconnected = function () {\n\t      return _this.dispatch({ type: 'CABLE_CAR_DISCONNECTED' });\n\t    };\n\t\n\t    this.received = function (msg) {\n\t      return _this.dispatch(msg);\n\t    };\n\t\n\t    this.rejected = function (data) {\n\t      throw 'Attempt to connect Redux store and ActionCable channel via CableCar failed. ' + data;\n\t    };\n\t\n\t    this.perform = function (action, data) {\n\t      _this.subscription.perform(action, data);\n\t    };\n\t\n\t    this.send = function (action) {\n\t      return _this.subscription.send(action);\n\t    };\n\t\n\t    this.unsubscribe = function () {\n\t      _this.subscription.unsubscribe();\n\t    };\n\t\n\t    if (typeof ActionCable == 'undefined') {\n\t      throw 'CableCar tried to connect to ActionCable but ActionCable is not defined';\n\t    }\n\t\n\t    this.channel = channel;\n\t    this.store = null;\n\t    this.initialize();\n\t  }\n\t\n\t  _createClass(CableCar, [{\n\t    key: 'initialize',\n\t    value: function initialize() {\n\t      this.subscription = ActionCable.createConsumer().subscriptions.create({ channel: this.channel }, {\n\t        initialized: this.initialized,\n\t        connected: this.connected,\n\t        disconnected: this.disconnected,\n\t        received: this.received,\n\t        rejected: this.rejected\n\t      });\n\t    }\n\t\n\t    // ActionCable callback functions\n\t\n\t\n\t    // ActionCable subscription functions\n\t\n\t  }]);\n\t\n\t  return CableCar;\n\t}();\n\t\n\texports.default = CableCar;\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// cablecar.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap a8df2ba8c9626fbeb937","import middleware from './src/middleware';\n\nexport default middleware\n\n\n// WEBPACK FOOTER //\n// ./index.js","import CableCar from './cableCar'\n\nconst middleware = (channel, s) => {\n  window.console.log(s)\n  var car = new CableCar(channel);\n  \n  return store => next => action => {\n\n    if(!car.store) {\n      car.store = store;\n    }\n    \n    if (action.type === 'CABLE_CAR_INITIALIZED') {\n      car.store = store;\n    } else if (action.type === 'DISCONNECT_CABLE_CAR') {\n      car.unsubscribe();\n    } else if (!action.__ActionCable) {\n      car.send(action);\n    }\n    \n    return (action.optimistic || action.__ActionCable ? next(action) : store.getState())\n\n  }\n};\n\n\nexport default middleware\n\n\n// WEBPACK FOOTER //\n// ./src/middleware.js","class CableCar {\n\n  constructor(channel) {\n\n    if (typeof ActionCable == 'undefined') {\n      throw(`CableCar tried to connect to ActionCable but ActionCable is not defined`);\n    }\n\n    this.channel = channel;\n    this.store = null;\n    this.initialize();\n  }\n\n  initialize() {\n    this.subscription = ActionCable.createConsumer().subscriptions.create({ channel: this.channel }, {\n      initialized: this.initialized,\n      connected: this.connected,\n      disconnected: this.disconnected,\n      received: this.received,\n      rejected: this.rejected,\n    });\n  }\n  \n  dispatch = (msg) => (this.store ? this.store.dispatch(Object.assign(msg, {__ActionCable: true})) : false) \n\n  // ActionCable callback functions\n  initialized = () => this.dispatch({ type: 'CABLE_CAR_INITIALIZED' })\n  \n  connected = () => this.dispatch({ type: 'CABLE_CAR_CONNECTED' })\n  \n  disconnected = () => this.dispatch({ type: 'CABLE_CAR_DISCONNECTED' })\n  \n  received = (msg) => this.dispatch(msg)\n  \n  rejected = (data) => {\n    throw(`Attempt to connect Redux store and ActionCable channel via CableCar failed. ${data}`)\n  }\n  \n  // ActionCable subscription functions\n  perform = (action, data) => {\n    this.subscription.perform(action, data);\n  }\n  \n  send = (action) => this.subscription.send(action)\n  \n  unsubscribe = () => {\n    this.subscription.unsubscribe();\n  }\n}\n\n\nexport default CableCar\n\n\n// WEBPACK FOOTER //\n// ./src/cableCar.js"],"sourceRoot":""}