module.exports=function(e){function t(i){if(n[i])return n[i].exports;var o=n[i]={exports:{},id:i,loaded:!1};return e[i].call(o.exports,o,o.exports,t),o.loaded=!0,o.exports}var n={};return t.m=e,t.c=n,t.p="",t(0)}([function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var o=n(1),c=i(o);t.default=c.default},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var o=n(2),c=i(o),r=void 0,s=!1,a=function(e){return function(t){return function(n){switch(n.type){case"CABLECAR_INITIALIZED":r=n.car;break;case"CABLECAR_CONNECTED":s=!0;break;case"CABLECAR_DISCONNECTED":s=!1;break;case"CABLECAR_DISCONNECT":r.unsubscribe(),r=null;break;case"CABLECAR_CHANGE_CHANNEL":r.changeChannel(n.channel,n.options||{})}return s&&!n.ActionCable__flag&&r.send(n),n.optimistic||n.ActionCable__flag?t(n):e.getState()}}};a.connect=function(e,t,n){return new c.default(e,t,n)},t.default=a},function(e,t){"use strict";function n(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0});var i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},o=function e(t,i){var o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(n(this,e),c.call(this),"undefined"==typeof ActionCable)throw new Error("CableCar tried to connect to ActionCable but ActionCable is not defined");this.store=t,this.initialize(i,o)},c=function(){var e=this;this.initialize=function(t,n){e.channel=t,e.options=n;var i=Object.assign({channel:t},n);e.subscription=ActionCable.createConsumer().subscriptions.create(i,{initialized:e.initialized,connected:e.connected,disconnected:e.disconnected,received:e.received,rejected:e.rejected})},this.changeChannel=function(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};e.unsubscribe(),e.initialize(t,n)},this.dispatch=function(t){var n="object"===("undefined"==typeof t?"undefined":i(t))?t:e.formatAction(t);n=Object.assign(n,{ActionCable__flag:!0}),e.store.dispatch(n)},this.formatAction=function(t){return{type:t,car:e,channel:e.channel,options:e.options}},this.initialized=function(){return e.dispatch("CABLECAR_INITIALIZED")},this.connected=function(){return e.dispatch("CABLECAR_CONNECTED")},this.disconnected=function(){return e.dispatch("CABLECAR_DISCONNECTED")},this.received=function(t){return e.dispatch(t)},this.rejected=function(e){throw new Error("Attempt to connect Redux store and ActionCable channel via CableCar failed. "+e)},this.perform=function(t,n){return e.subscription.perform(t,n)},this.send=function(t){return e.subscription.send(t)},this.unsubscribe=function(){e.subscription.unsubscribe(),e.disconnected()}};t.default=o}]);
//# sourceMappingURL=cablecar.min.js.map