module.exports=function(e){function t(i){if(n[i])return n[i].exports;var r=n[i]={exports:{},id:i,loaded:!1};return e[i].call(r.exports,r,r.exports,t),r.loaded=!0,r.exports}var n={};return t.m=e,t.c=n,t.p="",t(0)}([function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(1),c=i(r);t.default=c.default},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(2),c=i(r),s=void 0,o=function(e){return function(t){return function(n){switch(n.type){case"CABLE_CAR_INITIALIZED":s=n.car;break;case"CABLE_CAR_DISCONNECTED":s=null;break;case"CABLE_CAR_DISCONNECT":s.unsubscribe(),s.disconnected();break;case"CABLE_CAR_CHANGE_CHANNEL":s.changeChannel(n.channel,n.options||{})}return s&&!n.ActionCable__flag&&s.send(n),n.optimistic||n.ActionCable__flag?t(n):e.getState()}}};o.connect=function(e,t,n){return new c.default(e,t,n)},t.default=o},function(e,t){"use strict";function n(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0});var i=function e(t,i){var c=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(n(this,e),r.call(this),"undefined"==typeof ActionCable)throw new Error("CableCar tried to connect to ActionCable but ActionCable is not defined");this.params=Object.assign({channel:i},c),this.store=t,this.subscription=this.initialize(this.params)},r=function(){var e=this;this.initialize=function(t){return ActionCable.createConsumer().subscriptions.create(t,{initialized:e.initialized,connected:e.connected,disconnected:e.disconnected,received:e.received,rejected:e.rejected})},this.changeChannel=function(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};e.subscription.unsubscribe(),e.params=Object.assign({channel:t},n),e.subscription=e.initialize(e.params)},this.dispatch=function(t){return e.store.dispatch(Object.assign(t,{ActionCable__flag:!0}))},this.initialized=function(){return e.dispatch({type:"CABLE_CAR_INITIALIZED",car:e})},this.connected=function(){return e.dispatch({type:"CABLE_CAR_CONNECTED"})},this.disconnected=function(){return e.dispatch({type:"CABLE_CAR_DISCONNECTED"})},this.received=function(t){return e.dispatch(t)},this.rejected=function(e){throw new Error("Attempt to connect Redux store and ActionCable channel via CableCar failed. "+e)},this.perform=function(t,n){return e.subscription.perform(t,n)},this.send=function(t){return e.subscription.send(t)},this.unsubscribe=function(){return e.subscription.unsubscribe()}};t.default=i}]);
//# sourceMappingURL=cablecar.min.js.map