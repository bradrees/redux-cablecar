{"version":3,"sources":["webpack:///webpack/bootstrap 638b1b929ea7fe5bce37","webpack:///./index.js","webpack:///./src/middleware.js","webpack:///./src/cableCar.js"],"names":["middleware","car","action","type","msg","unsubscribe","changeChannel","channel","options","__ActionCable","send","optimistic","next","store","getState","connect","CableCar","ActionCable","params","Object","assign","subscription","initialize","createConsumer","subscriptions","create","initialized","connected","disconnected","received","rejected","dispatch","data","perform"],"mappings":"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","file":"cablecar.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 638b1b929ea7fe5bce37","import middleware from './src/middleware';\n\nexport default middleware\n\n\n// WEBPACK FOOTER //\n// ./index.js","import CableCar from './cableCar'\n\nconst middleware = store => {\n  \n  var car;\n  \n  return next => action => {\n\n    if (action.type === 'CABLE_CAR') {\n      \n      switch (action.msg) {\n        case 'INITIALIZED':\n          car = action.car;\n          break;\n        case 'CONNECTED':\n          break;\n        case 'DISCONNECTED':\n          car = null;\n          break;\n        case 'DISCONNECT':\n          car.unsubscribe();\n          break;\n        case 'CHANGE_CHANNEL':\n          car.changeChannel(action.channel, action.options || {});\n          break;\n      }\n      \n    } else if (car && !action.__ActionCable) {\n      car.send(action);\n    }\n  \n    return (action.optimistic || action.__ActionCable ? next(action) : store.getState())\n\n  }\n};\n\nmiddleware.connect = (store, channel, options) => new CableCar(store, channel, options)\n\n\nexport default middleware\n\n\n// WEBPACK FOOTER //\n// ./src/middleware.js","class CableCar {\n\n  constructor(store, channel, options = {}) {\n\n    if (typeof ActionCable == 'undefined') {\n      throw(`CableCar tried to connect to ActionCable but ActionCable is not defined`);\n    }\n\n    this.params = Object.assign({ channel }, options);\n    this.store = store;\n    this.subscription = this.initialize(this.params);\n  }\n\n  initialize = (params) => \n    \n    ActionCable.createConsumer().subscriptions.create(params, {\n      initialized: this.initialized,\n      connected: this.connected,\n      disconnected: this.disconnected,\n      received: this.received,\n      rejected: this.rejected,\n    })\n  \n  changeChannel = (channel, options = {}) => {\n    this.subscription.unsubscribe();\n    this.params = Object.assign({ channel }, options);\n    this.subscription = this.initialize(this.params)\n  }\n  \n  // Redux dispatch function\n  dispatch = (msg) => this.store.dispatch(Object.assign(msg, {__ActionCable: true}))\n\n  // ActionCable callback functions\n  initialized = () => this.dispatch({ type: 'CABLE_CAR', msg: 'INITIALIZED', car: this })\n  \n  connected = () => this.dispatch({ type: 'CABLE_CAR', msg: 'CONNECTED' })\n  \n  disconnected = () => this.dispatch({ type: 'CABLE_CAR', msg: 'DISCONNECTED' })\n  \n  received = (msg) => this.dispatch(msg)\n  \n  rejected = (data) => {\n    throw(`Attempt to connect Redux store and ActionCable channel via CableCar failed. ${data}`)\n  }\n  \n  // ActionCable subscription functions\n  perform = (action, data) => this.subscription.perform(action, data)\n  \n  send = (action) => this.subscription.send(action)\n  \n  unsubscribe = () => this.subscription.unsubscribe()\n\n}\n\n\nexport default CableCar\n\n\n// WEBPACK FOOTER //\n// ./src/cableCar.js"],"sourceRoot":""}