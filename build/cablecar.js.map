{"version":3,"sources":["webpack:///webpack/bootstrap e99d3c1d26d3860721d8","webpack:///./index.js","webpack:///./src/middleware.js","webpack:///./src/cableCar.js"],"names":["car","connected","middleware","action","type","unsubscribe","changeChannel","channel","options","ActionCable__flag","send","optimistic","next","store","getState","connect","CableCar","ActionCable","Error","initialize","params","Object","assign","subscription","createConsumer","subscriptions","create","initialized","disconnected","received","rejected","dispatch","msg","formatAction","data","perform"],"mappings":"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","file":"cablecar.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap e99d3c1d26d3860721d8","import middleware from './src/middleware';\n\nexport default middleware;\n\n\n\n// WEBPACK FOOTER //\n// ./index.js","import CableCar from './cableCar';\n\nlet car;\nlet connected = false;\n\nconst middleware = store => next => (action) => {\n  switch (action.type) {\n    case 'CABLECAR_INITIALIZED':\n      car = action.car;\n      break;\n    case 'CABLECAR_CONNECTED':\n      connected = true;\n      break;\n    case 'CABLECAR_DISCONNECTED':\n      connected = false;\n      break;\n    case 'CABLECAR_DISCONNECT':\n      car.unsubscribe();\n      car = null;\n      break;\n    case 'CABLECAR_CHANGE_CHANNEL':\n      car.changeChannel(action.channel, action.options || {});\n      break;\n    default:\n      break;\n  }\n\n  if (connected && !action.ActionCable__flag) {\n    car.send(action);\n  }\n\n  return (action.optimistic || action.ActionCable__flag ? next(action) : store.getState());\n};\n\nmiddleware.connect = (store, channel, options) => new CableCar(store, channel, options);\n\n\nexport default middleware;\n\n\n\n// WEBPACK FOOTER //\n// ./src/middleware.js","/* global ActionCable */\n\nclass CableCar {\n\n  constructor(store, channel, options = {}) {\n    if (typeof ActionCable === 'undefined') {\n      throw new Error('CableCar tried to connect to ActionCable but ActionCable is not defined');\n    }\n\n    this.store = store;\n    this.initialize(channel, options);\n  }\n\n  initialize = (channel, options) => {\n    this.channel = channel;\n    this.options = options;\n\n    const params = Object.assign({ channel }, options);\n\n    this.subscription = ActionCable.createConsumer().subscriptions.create(params, {\n      initialized: this.initialized,\n      connected: this.connected,\n      disconnected: this.disconnected,\n      received: this.received,\n      rejected: this.rejected,\n    });\n  }\n\n  changeChannel = (channel, options = {}) => {\n    this.unsubscribe();\n    this.initialize(channel, options);\n  }\n\n  // Redux dispatch function\n  dispatch = (msg) => {\n    let action = typeof msg === 'object' ? msg : this.formatAction(msg);\n    action = Object.assign(action, { ActionCable__flag: true });\n    this.store.dispatch(action);\n  }\n\n  formatAction = msg => ({\n    type: msg,\n    car: this,\n    channel: this.channel,\n    options: this.options,\n  })\n\n  // ActionCable callback functions\n  initialized = () => this.dispatch('CABLECAR_INITIALIZED')\n\n  connected = () => this.dispatch('CABLECAR_CONNECTED')\n\n  disconnected = () => this.dispatch('CABLECAR_DISCONNECTED')\n\n  received = msg => this.dispatch(msg)\n\n  rejected = (data) => {\n    throw new Error(`Attempt to connect Redux store and ActionCable channel via CableCar failed. ${data}`);\n  }\n\n  // ActionCable subscription functions (exposed globally)\n  perform = (action, data) => this.subscription.perform(action, data)\n\n  send = action => this.subscription.send(action)\n\n  unsubscribe = () => {\n    this.subscription.unsubscribe();\n    this.disconnected();\n  }\n}\n\n\nexport default CableCar;\n\n\n\n// WEBPACK FOOTER //\n// ./src/cableCar.js"],"sourceRoot":""}