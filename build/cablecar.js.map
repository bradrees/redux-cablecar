{"version":3,"sources":["webpack:///webpack/bootstrap e54793a4eec6a229574b","webpack:///./index.js","webpack:///./src/middleware.js","webpack:///./src/cableCar.js"],"names":["car","middleware","action","type","unsubscribe","disconnected","changeChannel","channel","options","ActionCable__flag","send","optimistic","next","store","getState","connect","CableCar","ActionCable","Error","params","Object","assign","subscription","initialize","createConsumer","subscriptions","create","initialized","connected","received","rejected","dispatch","msg","data","perform"],"mappings":"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","file":"cablecar.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap e54793a4eec6a229574b","import middleware from './src/middleware';\n\nexport default middleware;\n\n\n\n// WEBPACK FOOTER //\n// ./index.js","import CableCar from './cableCar';\n\nlet car;\n\nconst middleware = store => next => (action) => {\n  switch (action.type) {\n    case 'CABLE_CAR_INITIALIZED':\n      car = action.car;\n      break;\n    // case 'CABLE_CAR_CONNECTED':\n    //   break;\n    case 'CABLE_CAR_DISCONNECTED':\n      car = null;\n      break;\n    case 'CABLE_CAR_DISCONNECT':\n      car.unsubscribe();\n      car.disconnected();\n      break;\n    case 'CABLE_CAR_CHANGE_CHANNEL':\n      car.changeChannel(action.channel, action.options || {});\n      break;\n    default:\n      break;\n  }\n\n  if (car && !action.ActionCable__flag) {\n    car.send(action);\n  }\n\n  return (action.optimistic || action.ActionCable__flag ? next(action) : store.getState());\n};\n\nmiddleware.connect = (store, channel, options) => new CableCar(store, channel, options);\n\n\nexport default middleware;\n\n\n\n// WEBPACK FOOTER //\n// ./src/middleware.js","/* global ActionCable */\n\nclass CableCar {\n\n  constructor(store, channel, options = {}) {\n    if (typeof ActionCable === 'undefined') {\n      throw new Error('CableCar tried to connect to ActionCable but ActionCable is not defined');\n    }\n\n    this.params = Object.assign({ channel }, options);\n    this.store = store;\n    this.subscription = this.initialize(this.params);\n  }\n\n  initialize = params =>\n\n    ActionCable.createConsumer().subscriptions.create(params, {\n      initialized: this.initialized,\n      connected: this.connected,\n      disconnected: this.disconnected,\n      received: this.received,\n      rejected: this.rejected,\n    })\n\n  changeChannel = (channel, options = {}) => {\n    this.subscription.unsubscribe();\n    this.params = Object.assign({ channel }, options);\n    this.subscription = this.initialize(this.params);\n  }\n\n  // Redux dispatch function\n  dispatch = msg => this.store.dispatch(Object.assign(msg, { ActionCable__flag: true }))\n\n  // ActionCable callback functions\n  initialized = () => this.dispatch({ type: 'CABLE_CAR_INITIALIZED', car: this })\n\n  connected = () => this.dispatch({ type: 'CABLE_CAR_CONNECTED' })\n\n  disconnected = () => this.dispatch({ type: 'CABLE_CAR_DISCONNECTED' })\n\n  received = msg => this.dispatch(msg)\n\n  rejected = (data) => {\n    throw new Error(`Attempt to connect Redux store and ActionCable channel via CableCar failed. ${data}`);\n  }\n\n  // ActionCable subscription functions (exposed globally)\n  perform = (action, data) => this.subscription.perform(action, data)\n\n  send = action => this.subscription.send(action)\n\n  unsubscribe = () => this.subscription.unsubscribe()\n\n}\n\n\nexport default CableCar;\n\n\n\n// WEBPACK FOOTER //\n// ./src/cableCar.js"],"sourceRoot":""}