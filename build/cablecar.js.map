{"version":3,"sources":["webpack:///webpack/bootstrap 52456908e43d2363d26b","webpack:///./index.js","webpack:///./src/middleware.js","webpack:///./src/cableCar.js"],"names":["middleware","car","action","type","unsubscribe","__ActionCable","send","optimistic","next","store","getState","connect","channel","options","CableCar","initialize","params","ActionCable","createConsumer","subscriptions","create","initialized","connected","disconnected","received","rejected","dispatch","msg","Object","assign","data","perform","subscription"],"mappings":"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","file":"cablecar.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 52456908e43d2363d26b","import middleware from './src/middleware';\n\nexport default middleware\n\n\n// WEBPACK FOOTER //\n// ./index.js","import CableCar from './cableCar'\n\nconst middleware = store => {\n  \n  var car;\n  \n  return next => action => {\n\n    if (action.type === 'CABLE_CAR_INITIALIZED') {\n      car = action.car;\n    } else if (action.type === 'DISCONNECT_CABLE_CAR') {\n      car.unsubscribe();\n    } else if (!action.__ActionCable) {\n      car.send(action);\n    }\n  \n    return (action.optimistic || action.__ActionCable ? next(action) : store.getState())\n\n  }\n};\n\nmiddleware.connect = (store, channel, options) => new CableCar(store, channel, options)\n\n\nexport default middleware\n\n\n// WEBPACK FOOTER //\n// ./src/middleware.js","class CableCar {\n\n  constructor(store, channel, options = {}) {\n\n    if (typeof ActionCable == 'undefined') {\n      throw(`CableCar tried to connect to ActionCable but ActionCable is not defined`);\n    }\n\n    this.params = Object.assign(channel, options);\n    this.store = store;\n    this.subscription = this.initialize(this.params);\n  }\n\n  initialize = (params) => \n    \n    ActionCable.createConsumer().subscriptions.create(params, {\n      initialized: this.initialized,\n      connected: this.connected,\n      disconnected: this.disconnected,\n      received: this.received,\n      rejected: this.rejected,\n    })\n  \n  // Redux dispatch function\n  dispatch = (msg) => this.store.dispatch(Object.assign(msg, {__ActionCable: true}))\n\n  // ActionCable callback functions\n  initialized = () => this.dispatch({ type: 'CABLE_CAR_INITIALIZED', car: this })\n  \n  connected = () => this.dispatch({ type: 'CABLE_CAR_CONNECTED' })\n  \n  disconnected = () => this.dispatch({ type: 'CABLE_CAR_DISCONNECTED' })\n  \n  received = (msg) => this.dispatch(msg)\n  \n  rejected = (data) => {\n    this.dispatch({ type: 'CABLE_CAR_REJECTED' });\n    throw(`Attempt to connect Redux store and ActionCable channel via CableCar failed. ${data}`)\n  }\n  \n  // ActionCable subscription functions\n  perform = (action, data) => this.subscription.perform(action, data)\n  \n  send = (action) => this.subscription.send(action)\n  \n  unsubscribe = () => this.subscription.unsubscribe()\n\n}\n\n\nexport default CableCar\n\n\n// WEBPACK FOOTER //\n// ./src/cableCar.js"],"sourceRoot":""}